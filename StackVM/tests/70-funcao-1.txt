# Modelos de chamada de funcao
# empilha pc de retorno antes dos argumentos

# func1(0 = algo) -> 0,1
func1 : load 0
        print
        push 0
        push 1
        crunch 0 1
        pop_mark
        # stack agora eh [ pc retorno1 retorno2 1 ]
        push -1
        add
        dup
        # stack agora eh [ pc retorno1 retorno2 0 0 ]
        load
        # stack agora eh [ pc retorno1 retorno2 0 pc ]
        swap
        #                [ pc retorno pc 0 ]
        # crunch size=1 , base indireto
        crunch 1
        #                [ retorno pc ]
        jump
start : push null
        push null
        push pc
        push 5
        add
        push 'a'
        mark 1
        jump func1
# pc + 5 eh a proxima linha
        store 1
        store 0
        push "saindo"
        prints
        exit
